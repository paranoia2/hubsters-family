import { SlashCommandBuilder, CommandInteraction, EmbedBuilder, ActionRowBuilder, ButtonBuilder, ButtonStyle } from 'discord.js';
import { joinAndCreate, enqueue, playSong } from '../utils/player.js';

export const data = new SlashCommandBuilder()
  .setName('play')
  .setDescription('üéµ –í—ñ–¥—Ç–≤–æ—Ä–∏—Ç–∏ YouTube-–ø—ñ—Å–Ω—é –ø–æ –ø–æ—Å–∏–ª–∞–Ω–Ω—é –∞–±–æ –Ω–∞–∑–≤—ñ')
  .addStringOption(o => o.setName('query').setDescription('URL –∞–±–æ –ø–æ—à—É–∫–æ–≤–∏–π –∑–∞–ø–∏—Ç').setRequired(true));

export async function execute(interaction: CommandInteraction) {
  const query = interaction.options.getString('query', true);
  const member = interaction.member as any;
  const vc = member?.voice?.channel;
  if (!vc) return interaction.reply({ content: '‚ùå –¢–∏ –º–∞—î—à –±—É—Ç–∏ —É –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—ñ!', ephemeral: true });
  await interaction.deferReply();
  const guildId = interaction.guildId!;
  joinAndCreate(guildId, vc);
  // search with play-dl for YouTube
  const play = await import('play-dl');
  const search = await play.default.search(query, { limit: 1 });
  const url = search && search.length ? search[0].url : query;
  enqueue(guildId, { url, title: search[0]?.title, duration: search[0]?.durationRaw, requestedBy: interaction.user.tag });
  const song = await playSong(guildId);
  const embed = new EmbedBuilder()
    .setTitle('üé∂ –ó–∞—Ä–∞–∑ –≥—Ä–∞—î')
    .setDescription(`[${song.title || song.url}](${song.url})`)
    .addFields({ name: '‚åõ –¢—Ä–∏–≤–∞–ª—ñ—Å—Ç—å', value: song.duration || 'N/A', inline: true }, { name: 'üë§ –ó–∞–º–æ–≤–∏–≤', value: song.requestedBy || interaction.user.tag, inline: true })
    .setThumbnail('https://i.imgur.com/7G6zO8u.png');
  const row = new ActionRowBuilder().addComponents(
    new ButtonBuilder().setCustomId('pause_btn').setLabel('‚è∏ –ü–∞—É–∑–∞').setStyle(ButtonStyle.Primary),
    new ButtonBuilder().setCustomId('resume_btn').setLabel('‚ñ∂Ô∏è –ü—Ä–æ–¥–æ–≤–∂–∏—Ç–∏').setStyle(ButtonStyle.Success),
    new ButtonBuilder().setCustomId('skip_btn').setLabel('‚è≠ –°–∫—ñ–ø').setStyle(ButtonStyle.Secondary),
    new ButtonBuilder().setCustomId('stop_btn').setLabel('‚èπ –°—Ç–æ–ø').setStyle(ButtonStyle.Danger)
  );
  await interaction.editReply({ embeds: [embed], components: [row] });
}
