import { SlashCommandBuilder, PermissionFlagsBits } from 'discord.js';
import { getDb } from '../utils/jsondb.js';

export default {
  data: new SlashCommandBuilder()
    .setName('modlog')
    .setDescription('–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∂—É—Ä–Ω–∞–ª—É –º–æ–¥–µ—Ä–∞—Ü—ñ—ó')
    .addSubcommand(sc=>sc.setName('set').setDescription('–í–∫–∞–∑–∞—Ç–∏ –∫–∞–Ω–∞–ª')
      .addChannelOption(o=>o.setName('channel').setDescription('–ö–∞–Ω–∞–ª').setRequired(true)))
    .addSubcommand(sc=>sc.setName('test').setDescription('–ù–∞–¥—ñ—Å–ª–∞—Ç–∏ —Ç–µ—Å—Ç–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è'))
    .setDefaultMemberPermissions(PermissionFlagsBits.ManageGuild),
  async execute(interaction) {
    const db = getDb('config'); await db.read(); const cfg = db.JSON() || {};
    const gid = interaction.guild.id; cfg[gid] = cfg[gid] || {};
    const sub = interaction.options.getSubcommand();
    if (sub === 'set') {
      const ch = interaction.options.getChannel('channel', true);
      cfg[gid].modlog = ch.id; await db.write(cfg);
      await interaction.reply(`üìù ModLog –∫–∞–Ω–∞–ª: <#${ch.id}>`);
    } else {
      const chId = cfg[gid].modlog; if (!chId) return interaction.reply({content:'–ù–µ –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–æ', ephemeral:true});
      await interaction.guild.channels.cache.get(chId)?.send('‚úÖ ModLog –ø—Ä–∞—Ü—é—î');
      await interaction.reply({content:'–ù–∞–¥—ñ—Å–ª–∞–Ω–æ —Ç–µ—Å—Ç', ephemeral:true});
    }
  }
};
