import { SlashCommandBuilder, PermissionFlagsBits } from 'discord.js';
import { getDb } from '../utils/jsondb.js';

export default {
  data: new SlashCommandBuilder()
    .setName('warn')
    .setDescription('–°–∏—Å—Ç–µ–º–∞ –ø–æ–ø–µ—Ä–µ–¥–∂–µ–Ω—å')
    .addSubcommand(sc=>sc.setName('add').setDescription('–í–∏–¥–∞—Ç–∏ –ø–æ–ø–µ—Ä–µ–¥–∂–µ–Ω–Ω—è')
      .addUserOption(o=>o.setName('user').setDescription('–ö–æ–º—É').setRequired(true))
      .addStringOption(o=>o.setName('reason').setDescription('–ü—Ä–∏—á–∏–Ω–∞').setRequired(true)))
    .addSubcommand(sc=>sc.setName('list').setDescription('–°–ø–∏—Å–æ–∫ –ø–æ–ø–µ—Ä–µ–¥–∂–µ–Ω—å')
      .addUserOption(o=>o.setName('user').setDescription('–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á').setRequired(true)))
    .addSubcommand(sc=>sc.setName('clear').setDescription('–û—á–∏—Å—Ç–∏—Ç–∏ –ø–æ–ø–µ—Ä–µ–¥–∂–µ–Ω–Ω—è')
      .addUserOption(o=>o.setName('user').setDescription('–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á').setRequired(true)))
    .setDefaultMemberPermissions(PermissionFlagsBits.ModerateMembers),
  async execute(interaction) {
    const db = getDb('warns');
    const gid = interaction.guild.id;
    const sub = interaction.options.getSubcommand();
    const user = interaction.options.getUser('user', true);
    await db.read();
    const all = db.JSON() || {};
    all[gid] = all[gid] || {};
    all[gid][user.id] = all[gid][user.id] || [];
    if (sub === 'add') {
      const reason = interaction.options.getString('reason', true);
      all[gid][user.id].push({ reason, by: interaction.user.id, at: Date.now() });
      await db.write(all);
      await interaction.reply(`‚ö†Ô∏è –ü–æ–ø–µ—Ä–µ–¥–∂–µ–Ω–Ω—è –¥–ª—è <@${user.id}>: **${reason}** (—É—Å—å–æ–≥–æ: ${all[gid][user.id].length})`);
    } else if (sub === 'list') {
      const list = all[gid][user.id];
      if (!list.length) return interaction.reply('‚úÖ –ü–æ–ø–µ—Ä–µ–¥–∂–µ–Ω—å –Ω–µ–º–∞');
      const text = list.map((w,i)=>`${i+1}. ${w.reason} ‚Äî <@${w.by}> (${new Date(w.at).toLocaleString()})`).join('\n');
      await interaction.reply(`üìã –ü–æ–ø–µ—Ä–µ–¥–∂–µ–Ω–Ω—è –¥–ª—è <@${user.id}>:\n${text}`);
    } else {
      all[gid][user.id] = [];
      await db.write(all);
      await interaction.reply(`üßπ –û—á–∏—â–µ–Ω–æ –ø–æ–ø–µ—Ä–µ–¥–∂–µ–Ω–Ω—è –¥–ª—è <@${user.id}>`);
    }
  }
};
